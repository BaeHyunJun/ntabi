@using mNtabi.Models;
@using System.Text.RegularExpressions;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var key = Request["k"];

    var user = Session["user"] as User;

    string Btype = "",
            Bkey = "",
            Btitle = "",
            Bdate = "",
            Bname = "",
            Bstate = "",
            Bcontent = "",
            Bcategory = "";

    object aaaaa;

    foreach (object item in Model)
    {
        Btype = "";
        Bkey = "";
        Btitle = "";
        Bdate = "";
        Bname = "";
        Bstate = "";
        Bcontent = "";
        Bcategory = "";

        try { Btype = item.GetType().GetProperties()[0].GetValue(item, null).ToString(); }
        catch { }
        try { Bkey = item.GetType().GetProperties()[1].GetValue(item, null).ToString(); }
        catch { }
        try { Btitle = item.GetType().GetProperties()[2].GetValue(item, null).ToString(); }
        catch { }
        try { Bdate = item.GetType().GetProperties()[3].GetValue(item, null).ToString(); }
        catch { }
        try { Bstate = item.GetType().GetProperties()[4].GetValue(item, null).ToString(); }
        catch { }
        try { Bname = item.GetType().GetProperties()[5].GetValue(item, null).ToString(); }
        catch { }
        try { Bcontent = item.GetType().GetProperties()[6].GetValue(item, null).ToString(); }
        catch { }
        try { Bcategory = item.GetType().GetProperties()[14].GetValue(item, null).ToString(); }
        catch { }

        if (string.IsNullOrEmpty(Bcategory))
        {
            Bcategory = "event";
        }

        aaaaa = item.GetType().GetProperties()[7].GetValue(item, null);

        <section class="board @Bcategory">
            <h4>
                @Btitle
            </h4>
            <span class="date">@Bdate</span>
            <span class="writer">작성자 : @Bname</span>


            <div class="cont">
                @{
        string cont = Bcontent;

        try
        {
            cont = Regex.Replace(cont, @"\r\n|\n|\r", "<br/>");
        }
        catch { }

        @MvcHtmlString.Create(cont)
                }
            </div>

            @if (Bcategory == "event")
            {
                <div class="reply">
                    <h2>
                        @{
                int rcnt = 0;
                var cnt = aaaaa as List<review>;
                if (cnt[0].CU_SEQ != 0)
                {
                    rcnt = cnt.Count;
                }
                        }
                        댓글 @(rcnt > 0 ? rcnt.ToString() : "없음")
                    </h2>

                    <div class="comment">
                        <textarea class="rContent"></textarea>
                        <a class="reply_add_btn">등록</a>
                    </div>


                    <ul style="padding: 0; margin: 0; list-style: none;">

                        @{
                string rid = "",
                        rcont = "",
                        rdate = "",
                        rname = "",
                        rcat = "";

                foreach (object ab in aaaaa as List<review>)
                {
                    rid = "";
                    rcont = "";
                    rdate = "";
                    rname = "";
                    rcat = "";

                    try { rid = ab.GetType().GetProperties()[0].GetValue(ab, null).ToString(); }
                    catch { break; }
                    try { rname = ab.GetType().GetProperties()[3].GetValue(ab, null).ToString(); }
                    catch { break; }
                    try { rcont = ab.GetType().GetProperties()[4].GetValue(ab, null).ToString(); }
                    catch { break; }
                    try { rdate = ab.GetType().GetProperties()[6].GetValue(ab, null).ToString(); }
                    catch { break; }
                    try { rcat = ab.GetType().GetProperties()[7].GetValue(ab, null).ToString(); }
                    catch { }


                    if (rid == "0")
                    {
                        break;
                    }

                    switch (rcat)
                    {
                        case "01":
                            rcat = "<n행시>";
                            break;
                        case "02":
                            rcat = "<응원 댓글>";
                            break;
                        case "03":
                            rcat = "<에피소드>";
                            break;
                    }

                    <li style="padding: 20px; border-bottom: 1px solid #e1e1e1; font-size: 14px;">
                        <div style="line-height: 35px; text-align: right;">
                            <span style="margin-right: 20px; float: left;">@rname</span>@rdate

                        </div>
                        <p style="line-height: 22px; margin: 0;">
                            <span>@rcat</span>
                            @{
                    string rrcont = rcont;

                    try { rrcont = Regex.Replace(rrcont, @"\r\n|\n|\r", "<br/>"); }
                    catch { }

                    @MvcHtmlString.Create(rrcont)
                            }
                        </p>
                    </li>
                }
                        }
                    </ul>
                </div>
            }
            else if (Bcategory == "coupon")
            {
                <div style="text-align: center;">
                    <a alt="인쇄하기" class="btn btn-default" href="javascript:pagePrint(document.getElementById('print'));" style="margin: 20px;">인쇄하기</a>
                    @*<a alt="다운로드" href="~/Content/file/DonQuijote.pdf" target="_blank" download>다운로드</a>*@
                </div>
            }
        </section>

    }
}


<script>
    $(document).ready(function () {
        $("div.comment a.reply_add_btn").on("click", function () {
            var url = window.location.pathname + window.location.search;
            url = encodeURIComponent(url);

            if ("@user" == "") {
                alert("로그인을 하셔야 댓글을 등록할 수 있습니다.");
                $('a.loginBtn').click();
                return;
            }

            var _this = $(this),
                key = "@key",
                cont = _this.parents("div.comment").find("textarea"),
                cat = _this.parents("div.comment").find("input[name='cat[]']:checked").val();

            var url = "/Recommend/JSON_Update";
            var datas = { type: type, key: key, content: cont.val(), cat: cat };

            if (cont.val() == "") {
                alert("내용을 입력해 주세요.");
                return;
            }

            $.ajax({
                type: "POST",
                url: url,
                data: datas,
                success: function (data) {
                    var cmdHtml = "";

                    cmdHtml = "<li style='padding: 20px; border-bottom: 1px solid #e1e1e1; font-size: 14px;'>" +
                                "<div style='line-height: 35px; text-align: right;'>" +
                                    "<span style='margin-right: 20px; float: left;'>" +
                                    data.name +
                                    "</span>" +
                                    data.ist_date.substring(0, 4) + "-" + data.ist_date.substring(4, 6) + "-" + data.ist_date.substring(6, 8) +
                                "</div>" +
                                "<p style='line-height: 22px; margin: 0;'>" +
                                    data.post_content +
                                "</p>" +
                            "</div>";

                    $("div.reply ul").append(cmdHtml);
                    cont.val("");
                }
                , beforeSend: function () {
                    $('#loading').show();
                }
                , complete: function () {
                    $('#loading').hide();
                }
            });
        });
    });
</script>