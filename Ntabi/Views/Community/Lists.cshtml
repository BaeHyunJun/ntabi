@using Ntabi.Models;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var type = Request["type"];

    if (string.IsNullOrEmpty(type))
    {
        type = "notice";
    }

    string addClass = "class=on";

    var user = Session["user"] as User;

    string typeTxt = "";

    switch (type)
    {
        case "notice":
            typeTxt = "공지사항";
            break;
        case "qna":
            typeTxt = "질문과 답변";
            break;
        case "review":
            typeTxt = "고객리뷰";
            break;
        case "customer":
            typeTxt = "맞춤여행문의";
            break;
    }
}

<style>
    div#container > article > section.board {
        padding-top: 10px;
    }

    section.board > h3 {
        font-size: 14px;
        font-weight: normal;
        color: #2a2a2a;
        letter-spacing: -0.8px;
    }

    section.board ul {
        padding: 0;
        margin: 0;
        list-style: none;
        font-size: 0;
        overflow: hidden;
    }

        section.board ul.listsHeader {
            text-align: center;
        }

            section.board ul.listsHeader > li {
                margin: 0;
                padding: 0 19px;
                position: relative;
                display: inline-block;
            }

                section.board ul.listsHeader > li:before {
                    content: '';
                    border-right: 1px solid #777;
                    display: block;
                    position: absolute;
                    top: 4px;
                    bottom: 2px;
                    left: 0;
                }

                section.board ul.listsHeader > li:first-child:before {
                    display: none;
                }

                section.board ul.listsHeader > li > a {
                    color: #9f9f9f;
                    font-size: 16px;
                }

                section.board ul.listsHeader > li.on > a {
                    color: #101010;
                }

    section.board table.listsBody {
        width: 100%;
        margin-top: 30px;
    }

        section.board table.listsBody > thead {
            border-bottom: 1px solid #ddd;
        }

            section.board table.listsBody > thead > tr {
                line-height: 42px;
            }

                section.board table.listsBody > thead > tr > th {
                    text-align: center;
                    font-size: 15px;
                    color: #424242;
                    width: 10%;
                }

        section.board table.listsBody > tbody > tr {
            line-height: 40px;
            text-align: center;
            font-size: 15px;
            color: #2a2a2a;
        }

            section.board table.listsBody > tbody > tr td.title {
                text-align: left;
            }

                section.board table.listsBody > tbody > tr td.title > a {
                    display: block;
                }

                    section.board table.listsBody > tbody > tr td.title > a:after {
                        content: "";
                        display: block;
                        clear: both;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 {
                        float: left;
                        font-size: 14px;
                        font-weight: normal;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > p.lock {
                        float: left;
                        width: 12px;
                        height: 12px;
                        margin: 0;
                        margin-left: 8px;
                        background-image: url("/Content/Images/Shared/icon_lock.png");
                        background-size: 100% auto;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 > span.notice {
                        color: red;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 > span.air {
                        color: #2077c9;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 > span.ship {
                        color: #69b265;
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 > span.event {
                        color: #8e71fb; /*#df4718;*/
                    }

                    section.board table.listsBody > tbody > tr td.title > a > h4 > span.local {
                        color: #ffa019;
                    }

    section.board div.paging {
        position: relative;
        height: 120px;
        margin-top: 5px;
        text-align: center;
        border-top: 1px solid #999;
    }

        section.board div.paging > ul {
            line-height: 120px;
        }

            section.board div.paging > ul > li {
                display: inline-block;
                padding: 5px 10px;
            }

                section.board div.paging > ul > li > a {
                    font-size: 13px;
                    color: #9f9f9f;
                }

                section.board div.paging > ul > li.on > a {
                    color: black;
                }

        section.board div.paging > p {
            position: absolute;
            right: 20px;
            bottom: 10px;
            font-size: 12px;
            color: #5c5c5c;
        }

    div#container > article section.process {
        margin-top: 80px;
    }

    section.process > h3 {
        font-size: 17px;
        color: #111;
        display: block;
        text-align: center;
        border-top: 1px solid #2a2a2a;
        line-height: 30px;
        border-bottom: 2px solid #2a2a2a;
    }

    section.process > ul {
        margin: 0;
        list-style: none;
        font-size: 0;
        overflow: hidden;
        padding: 20px 0;
        text-align: center;
        border-bottom: 1px solid #2a2a2a;
    }

        section.process > ul > li {
            width: 14%;
            display: inline-block;
            height: 100px;
            position: relative;
        }

            section.process > ul > li > h4 {
                position: absolute;
                left: 0;
                bottom: 0;
                right: 0;
            }
</style>

<section class="board notice">
    <h3>고객센터 > @typeTxt</h3>
    <ul class="listsHeader">
        <li @if (type == "notice") { @addClass  }>
            <a href="/Community/Lists?type=notice">공지사항</a>
        </li>
        <li @if (type == "qna") { @addClass  }>
            <a href="/Community/Lists?type=qna">질문과 답변</a>
        </li>
        <li @if (type == "review") { @addClass  }>
            <a href="/Community/Lists?type=review">고객리뷰</a>
        </li>
        <li @if (type == "customer") { @addClass   }>
            <a href="/Community/Lists?type=customer">맞춤여행문의</a>
        </li>
    </ul>

    <table class="listsBody">
        <colgroup>
            <col style="width: 10%;" />
            @if (type == "qna")
            {
                <col style="width: 10%;" />
                <col style="width: 50%;" />
                <col style="width: 10%;" />
            }
            else
            {
                <col style="width: 70%;" />
            }
            <col style="width: 10%;" />
            <col style="width: 10%;" />
        </colgroup>
        <thead>
            <tr>
                <th>번호</th>
                @if (type == "qna")
                {
                    <th>분류</th>
                }
                <th>제목</th>
                <th>글쓴이</th>
                <th>등록일</th>

                @if (type == "qna")
                {
                    <th>진행 상황</th>
                }
            </tr>
        </thead>
        <tbody>
            @{

                string title = "",
                       ist_date = "",
                       author = "",
                       className = "",
                       category = "",
                       catText = "",
                       starPoint = "",
                       pdt_title = "",
                       post_key = "",
                       rCont = "",
                       post_state = "";

                int count = 0,
                    pageNum = 1,
                    maxPage = 1,
                    boardNum = 0;

                try { count = ViewBag.Cnt; }
                catch { }
                try { pageNum = ViewBag.pageNum; }
                catch { }

                decimal a = count / 10;

                maxPage = count / 10;

                boardNum = count - ((pageNum - 1) * 10);

                string cuyy = "",
                       cuseq = "";

                foreach (object item in Model)
                {
                    title = "";
                    ist_date = "";
                    author = "";
                    category = "";
                    catText = "";
                    starPoint = "";
                    pdt_title = "";
                    post_key = "";
                    rCont = "";
                    post_state = "";

                    cuyy = "";
                    cuseq = "";

                    try { post_key = item.GetType().GetProperties()[1].GetValue(item, null).ToString(); }
                    catch { }
                    try { title = item.GetType().GetProperties()[2].GetValue(item, null).ToString(); }
                    catch { }
                    try { ist_date = item.GetType().GetProperties()[3].GetValue(item, null).ToString(); }
                    catch { }
                    try { post_state = item.GetType().GetProperties()[4].GetValue(item, null).ToString(); }
                    catch { }
                    try { author = item.GetType().GetProperties()[5].GetValue(item, null).ToString(); }
                    catch { }
                    try { cuyy = item.GetType().GetProperties()[6].GetValue(item, null).ToString(); }
                    catch { }
                    try { cuseq = item.GetType().GetProperties()[7].GetValue(item, null).ToString(); }
                    catch { }
                    try { starPoint = item.GetType().GetProperties()[9].GetValue(item, null).ToString(); }
                    catch { }
                    try { category = item.GetType().GetProperties()[10].GetValue(item, null).ToString(); }
                    catch { }
                    try { rCont = item.GetType().GetProperties()[11].GetValue(item, null).ToString(); }
                    catch { }
                    try { pdt_title = item.GetType().GetProperties()[16].GetValue(item, null).ToString(); }
                    catch { }

                    switch (category)
                    {
                        case "notice":
                            catText = "<공지사항>";
                            break;
                        case "air":
                            catText = "<항공>";
                            break;
                        case "ship":
                            catText = "<선박>";
                            break;
                        case "event":
                            catText = "<특가/이벤트>";
                            break;
                        case "local":
                            catText = "<현지소식>";
                            break;

                        case "JP":
                            catText = "일본";
                            break;
                        case "TW":
                            catText = "대만";
                            break;
                        case "VE":
                            catText = "베트남";
                            break;
                        case "PH":
                            catText = "필리핀";
                            break;
                        case "HAW":
                            catText = "하와이";
                            break;
                        case "GSA":
                            catText = "괌/사이판";
                            break;

                        case "JPN":
                            catText = "항공";
                            break;
                        case "SEA":
                            catText = "선박";
                            break;
                        case "LOC":
                            catText = "패키지";
                            break;
                        case "ETC":
                            catText = "현지투어";
                            break;
                        default:
                            catText = "기타";
                            break;

                    }

                    switch (starPoint)
                    {
                        case "5":
                            starPoint = "★★★★★";
                            break;
                        case "4":
                            starPoint = "★★★★";
                            break;
                        case "3":
                            starPoint = "★★★";
                            break;
                        case "2":
                            starPoint = "★★";
                            break;
                        case "1":
                            starPoint = "★";
                            break;
                    }

                    string urlLink = "";

                    if (post_state != "Y" || (user != null && ("ASPN15TRGT" + cuyy + cuseq).Equals(user.Login)))
                    {
                        urlLink = "./Views?type=" + type + "&key=" + post_key;
                    }
                    else
                    {
                        urlLink = "javascript:alert('비밀글입니다.');";
                    }

                    <tr>
                        <td>@boardNum</td>
                        @if (type == "qna")
                        {
                            <td>@catText</td>
                        }
                        <td class="title">
                            <a href="@urlLink">
                                <h4>
                                    @if (type == "notice")
                                    {
                                        <span class="@category">@catText </span>
                                    }
                                    @title
                                </h4>
                                @if (post_state == "Y")
                                {
                                    <p class="lock"></p>
                                }
                            </a>
                        </td>
                        <td>@author</td>
                        <td>@ist_date</td>
                        @if (type == "qna")
                        {
                            <td>

                                @{
                            string rText = "확인중";

                            if (!string.IsNullOrEmpty(rCont))
                            {
                                rText = "답변완료";
                            }

                            @rText
                                }

                            </td>
                        }
                        @*@if (type == "review")
                            {
                                <td>@starPoint</td>
                            }*@
                    </tr>

                        boardNum--;
                }

                if (count < 1)
                {
                    <tr>
                        <td colspan="6" style="height: 300px;">
                            글이 없습니다.
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <style>
        div.paging ul {
            margin-top: 20px;
        }

        div.paging li {
            font-size: 12px;
            display: inline-block;
            padding: 0 10px;
        }
    </style>
    <div class="paging">
        <div class="prev-next">
            <ul>
                @{
                    string catLink = "";

                    int maxPageCnt = 10;
                    int blockNum = ((pageNum - 1) / maxPageCnt) * 10 + 1;

                    if (!string.IsNullOrEmpty(Request["category"]))
                    {
                        catLink = "&category=" + Request["category"];
                    }

                    if (count % 10 > 0)
                    {
                        maxPage++;
                    }

                    if (pageNum > 1)
                    {
                        <li class="community_prev_btn"><a href="?type=@type@catLink&idx=@(pageNum-1)">◀</a></li>
                    }

                    for (var i = blockNum; i < maxPage; i++)
                    {
                        if (i >= blockNum + maxPageCnt + 1)
                        {
                            break;
                        }

                        if (i == pageNum)
                        {
                            className = "class=on";
                        }
                        else
                        {
                            className = "";
                        }

                        <li><a href="?type=@type@catLink&idx=@(i)" @className>@(i)</a></li>
                    }

                    if (pageNum < maxPage)
                    {
                        <li class="community_next_btn"><a href="?type=@type@catLink&idx=@(pageNum+1)">▶</a></li>
                    }
                }
            </ul>
            @if (type == "qna" || type == "customer")
            {
                <a class="btn btn-default writeBtn" href="#" style="position: absolute; right: 20px; top: 20px;"> 글쓰기 </a>
            }
        </div>
    </div>
</section>


<script>
    $("a.writeBtn").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();

        if ("@user" != "") {
            location.href = "./Write?t=@type";
        }
        else {
            alert("로그인을 해주세요.");
            $('a.loginBtn').click();
        }
    });
</script>