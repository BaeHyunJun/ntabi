@using NDayTrip.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var user = Session["user"] as User;

    var trfData = ViewBag.trf;
    var prcData = ViewBag.prc;
    var DateData = ViewBag.Date;
    var empData = ViewBag.emp;
    var rvData = ViewBag.rvData;

    string empNo = "",
           empTel = "",
           empMail = "";

    foreach(object item in empData)
    {
        empNo = "";
        empTel = "";
        empMail = "";

        try { empNo = item.GetType().GetProperties()[0].GetValue(item, null).ToString(); } catch { continue; }
        try { empTel = item.GetType().GetProperties()[1].GetValue(item, null).ToString(); } catch { continue; }
        try { empMail = item.GetType().GetProperties()[2].GetValue(item, null).ToString(); } catch { continue; }
    }

    string code = "",
           title = "",
           feature = "",
           content = "",
           option = "",
           revProcess = "",
           chkPoint = "",
           bnsPoint = "",
           incPoint = "",
           nIncPoint = "",
           comPoint = "",
           schedule = "",
           asdfsdtxt = "",
           Currency = "",
           minPrice = "",
           key = "",
           APrice = "",
           CPrice = "",
           IPrice = "";

    foreach (object item in Model)
    {
        code = "";
        title = "";
        feature = "";
        content = "";
        option = "";
        revProcess = "";
        chkPoint = "";
        bnsPoint = "";
        incPoint = "";
        nIncPoint = "";
        comPoint = "";
        schedule = "";
        asdfsdtxt = "";
        Currency = "";
        minPrice = "";
        APrice = "";
        CPrice = "";
        IPrice = "";
        key = "";

        try { code = item.GetType().GetProperties()[0].GetValue(item, null).ToString(); } catch { continue; }
        try { title = item.GetType().GetProperties()[1].GetValue(item, null).ToString(); } catch { continue; }
        try { content = item.GetType().GetProperties()[2].GetValue(item, null).ToString(); } catch { continue; }
        //try { option = item.GetType().GetProperties()[3].GetValue(item, null).ToString(); } catch { continue; }
        try { feature = item.GetType().GetProperties()[4].GetValue(item, null).ToString(); } catch { continue; }
        try { revProcess = item.GetType().GetProperties()[5].GetValue(item, null).ToString(); } catch { continue; }
        try { chkPoint = item.GetType().GetProperties()[6].GetValue(item, null).ToString(); } catch { continue; }
        try { bnsPoint = item.GetType().GetProperties()[7].GetValue(item, null).ToString(); } catch { continue; }
        try { incPoint = item.GetType().GetProperties()[8].GetValue(item, null).ToString(); } catch { continue; }
        try { nIncPoint = item.GetType().GetProperties()[9].GetValue(item, null).ToString(); } catch { continue; }
        try { comPoint = item.GetType().GetProperties()[10].GetValue(item, null).ToString(); } catch { continue; }
        //try { schedule = item.GetType().GetProperties()[11].GetValue(item, null).ToString(); } catch { continue; }
        //try { asdfsdtxt = item.GetType().GetProperties()[12].GetValue(item, null).ToString(); } catch { continue; }

        try { Currency = item.GetType().GetProperties()[13].GetValue(item, null).ToString(); } catch { continue; }
        try { minPrice = item.GetType().GetProperties()[14].GetValue(item, null).ToString(); } catch { continue; }
        try { key = item.GetType().GetProperties()[15].GetValue(item, null).ToString(); } catch { continue; }

        try { schedule = item.GetType().GetProperties()[17].GetValue(item, null).ToString(); } catch { continue; }
        //try { nIncPoint = item.GetType().GetProperties()[9].GetValue(item, null).ToString(); } catch { continue; }
        //try { comPoint = item.GetType().GetProperties()[10].GetValue(item, null).ToString(); } catch { continue; }
        //try { schedule = item.GetType().GetProperties()[11].GetValue(item, null).ToString(); } catch { continue; }
        //try { asdfsdtxt = item.GetType().GetProperties()[12].GetValue(item, null).ToString(); } catch { continue; }
    }

    switch (Currency)
    {
        case "KRW":
            Currency = "원";
            break;
        case "JPY":
            Currency = "엔";
            break;
        case "USD":
            Currency = "달러";
            break;
    }
}

<style>
    section.pdtFooter article.reserve_box a.ui-state-default,
    section.pdtFooter article.reserve_box .ui-widget-content a.ui-state-default {
        background-color: #a0ce54 !important;
        opacity: 1 !important;
        color: white;
    }

    section.pdtFooter article.reserve_box a.ui-state-active,
    section.pdtFooter article.reserve_box .ui-widget-content a.ui-state-active {
        background-color: #FFD180 !important;
    }

    section.pdtFooter article.reserve_box td.bg_red a.ui-state-default,
    section.pdtFooter article.reserve_box .ui-widget-content td.bg_red a.ui-state-default {
        background-color: #cb1010 !important;
        opacity: 1 !important;
        color: white;
    }

    td.ui-datepicker-unselectable.ui-state-disabled span {
        background-color: #000 !important;
        opacity: 1 !important;
        color: white;
    }

    section.pdtViews article.pdtCont div.titBox h2 {
        color: #a0ce54;
        font-size: 20px;
        font-weight: bold;
        text-align: center;
    }

    section.pdtViews article.pdtCont div.titBox h3 {
        font-size: 14px;
        color: black;
        font-weight: normal;
        margin: 0;
        padding: 0;
        line-height: 18px;
        text-overflow: ellipsis;
        white-space: nowrap;
        word-wrap: normal;
        overflow: hidden;
        border: none;
    }

    section.pdtViews article.pdtCont div.titBox p {
        background-color: #eee;
        margin: 10px -15px;
        padding: 10px;
        font-size: 16px;
        text-align: right;
        font-weight: bold;
        max-width: none;
    }

    section.pdtViews article.pdtCont div.review form.rvWriter {
        display: none;
        border: 1px solid #ddd;
        padding: 5px;
        margin-bottom: 10px;
    }

        section.pdtViews article.pdtCont div.review form.rvWriter > textarea {
            width: 100%;
            min-height: 150px;
            border: none;
            background: #f4f4f4;
        }

        section.pdtViews article.pdtCont div.review form.rvWriter > select {
            width: 100%;
            margin: 5px 0;
            padding: 5px;
        }

        section.pdtViews article.pdtCont div.review form.rvWriter > a.btn.rvSave {
            width: 100%;
            background: #efefef;
            border: none;
        }

    section.pdtViews article.pdtCont div.review ul.rvLists {
        margin: 0;
        padding: 0;
        list-style: none;
        font-size: 0;
    }

        section.pdtViews article.pdtCont div.review ul.rvLists li {
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
            font-size: 14px;
            line-height: 20px;
            overflow: hidden;
        }

            section.pdtViews article.pdtCont div.review ul.rvLists li:first-child {
                padding-top: 0;
            }

            section.pdtViews article.pdtCont div.review ul.rvLists li.noRv {
                border: 1px solid #ddd;
                height: 100px;
                line-height: 100px;
                text-align: center;
            }

            section.pdtViews article.pdtCont div.review ul.rvLists li p {
                margin: 10px 0;
            }

            section.pdtViews article.pdtCont div.review ul.rvLists li span.date {
                float: right;
            }
</style>

<section class="content pdtViews">
    <article class="feature" style="background-image: url(@feature);"></article>

    <article class="pdtCont">
        <div class="titBox">
            <h2>@title</h2>

            <h3>@content</h3>

            <p>
                <span style="float: left">상품가격(1인)</span>
                <span style="color: red;"> @{@String.Format("{0:#,##0}", int.Parse(minPrice))}</span>@Currency 부터~
            </p>
        </div>

        @if (!string.IsNullOrEmpty(schedule.ToString()))
        {
        <div class="schedule">
            <h3>여행일정</h3>
            @MvcHtmlString.Create(schedule)
        </div>
        }

        @if (!string.IsNullOrEmpty(revProcess.ToString()))
        {
        <div>
            <h3>예약 진행 과정</h3>
            @MvcHtmlString.Create(revProcess)
        </div>
        }


        @if (!string.IsNullOrEmpty(bnsPoint.ToString()))
        {
        <div class="bnsPoint">
            <h3>상품 특전</h3>
            @MvcHtmlString.Create(bnsPoint)
        </div>
        }


        @if (!string.IsNullOrEmpty(chkPoint.ToString()))
        {
        <div class="chkPoint">
            <h3>확인 사항</h3>
            @MvcHtmlString.Create(chkPoint)
        </div>
        }


        @if (!string.IsNullOrEmpty(incPoint.ToString()) || !string.IsNullOrEmpty(nIncPoint.ToString()))
        {
        <div class="incPoint">
            <h3>포함/불포함 사항</h3>
            @if (!string.IsNullOrEmpty(incPoint.ToString()))
            {
            <h4>포함사항</h4>
            @MvcHtmlString.Create(incPoint)
            }
            @if (!string.IsNullOrEmpty(nIncPoint.ToString()))
            {
            <h4>불포함사항</h4>
            @MvcHtmlString.Create(nIncPoint)
            }
        </div>
        }


        @if (!string.IsNullOrEmpty(comPoint.ToString()))
        {
        <div class="comPoint">
            <h3>취소수수료</h3>
            @MvcHtmlString.Create(comPoint)
        </div>
        }

        <div class="review">

            @if (user != null)
            {
            <button class="btn btn-default pull-right rvWBtn">후기적기 +</button>
            }

            <h3 style="height: 40px; line-height: 40px;">이용후기</h3>

            <form name="rvForm" class="rvWriter">
                <input type="hidden" name="pCode" value="@code" />
                <input type="hidden" name="pKey" value="@key" />

                <textarea name="rvCont" placeholder="후기를 남겨주세요."></textarea>
                <select name="rvStar">
                    <option value="5">★★★★★ 매우 만족</option>
                    <option value="4">★★★★ 만족</option>
                    <option value="3">★★★ 보통</option>
                    <option value="2">★★ 불만족</option>
                    <option value="1">★ 매우 불만족</option>
                </select>
                <a class="btn btn-default rvSave">저장</a>
            </form>

            <ul class="rvLists">
                @{
                int index = 0;

                string rvCont = "",
                rvStar = "",
                rvDate = "",
                rvName = "",
                rvMail = "";

                foreach (object item in rvData)
                {
                rvCont = "";
                rvStar = "";
                rvDate = "";
                rvName = "";
                rvMail = "";

                try { rvCont = item.GetType().GetProperties()[0].GetValue(item, null).ToString(); } catch { continue; }
                try { rvStar = item.GetType().GetProperties()[1].GetValue(item, null).ToString(); } catch { continue; }
                try { rvDate = item.GetType().GetProperties()[2].GetValue(item, null).ToString(); } catch { continue; }
                try { rvName = item.GetType().GetProperties()[3].GetValue(item, null).ToString(); } catch { continue; }
                try { rvMail = item.GetType().GetProperties()[4].GetValue(item, null).ToString(); } catch { }

                switch(rvStar)
                {
                case "5":
                rvStar = "★★★★★";
                break;
                case "4":
                rvStar = "★★★★";
                break;
                case "3":
                rvStar = "★★★";
                break;
                case "2":
                rvStar = "★★";
                break;
                case "1":
                rvStar = "★";
                break;
                }

                //rvName = rvName.Substring(0, 1) + " * " + rvName.Substring(rvName.Length - 1, 1);

                <li>
                    <span class="point">@rvStar</span> @rvName
                    <p>@MvcHtmlString.Create(rvCont)</p>
                    <span class="date">@rvDate</span>
                </li>

                index++;
                }

                if (index < 1)
                {
                <li class="noRv">
                    후기가 없습니다. 등록해주세요
                </li>
                }
                }

                @*
                <li>
                    <span class="point">★★★★★</span> 배 * 준
                    <p>여행자 보험이나 차량 이동 스케쥴, 기타 자잘한 부분까지 잘 챙겨주셔서 넘넘 감사했어요^^</p>
                    <span class="date">2017/08/16</span>
                </li>
                <li>
                    <span class="point">★★★★★</span> 배 * 준
                    <p>여행자 보험이나 차량 이동 스케쥴, 기타 자잘한 부분까지 잘 챙겨주셔서 넘넘 감사했어요^^</p>
                    <span class="date">2017/08/16</span>
                </li>
                <li>
                    <span class="point">★★★★★</span> 배 * 준
                    <p>여행자 보험이나 차량 이동 스케쥴, 기타 자잘한 부분까지 잘 챙겨주셔서 넘넘 감사했어요^^</p>
                    <span class="date">2017/08/16</span>
                </li>*@
            </ul>
        </div>
    </article>
</section>

<section class="pdtFooter">
    <article class="fixBtn">
        <a class="call" href="tel:@empTel">
            <img src="~/content/Images/icon_call.png">
        </a>
        <div class="reserve">
            예약하기
        </div>
        <a class="message" href="http://pf.kakao.com/_zGkTxl">
            <img src="~/content/Images/icon_message.png">
        </a>
    </article>

    <article class="reserve_box">
        <div id="reserve_head" class="reserve_head">
            <h3>@title</h3>
            <img src="/content/Images/x_icon.png">
        </div>

        <form name="revForm">
            <input type="hidden" name="code" value="@code" />
            <input type="hidden" name="key" value="@key" />
            <input type="hidden" name="emp" value="@empNo" />

            <div>
                <ul style="font-size: 11px; padding: 0; margin: 5px 6%; text-align: right;">
                    <li class="ft-12" style="display: inline-block;"><span style="color: #a0ce54;">■</span> 예약 가능</li>
                    @*
                    <li class="ft-12" style="display: inline-block; margin-left: 10px;"><span style="color: pink;">■</span> 예약 대기</li>*@
                    <li class="ft-12" style="display: inline-block; margin-left: 10px;"><span style="color: #000;">■</span> 예약 마감</li>
                    @*
                    <li class="ft-12" style="display: inline-block; margin-left: 10px;"><span style="color: #cb1010;">■</span> 출발 확정</li>*@
                </ul>
            </div>

            <div id="datepicker" class="datepicker"></div>

            <div class="optionsArea">
                <input type="hidden" name="prcAdult" value="" />
                <input type="hidden" name="prcChild" value="" />
                <input type="hidden" name="prcBaby" value="" />
                <input type="hidden" name="prcCurrency" value="" />
                <input type="hidden" name="date" value="" />
            </div>

            <div class="price_box">
                <div class="age">
                    성인
                    <select name="adult_cnt">
                        <option selected="selected">1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                    </select>명
                </div>

                <div class="age">
                    소아
                    <select name="child_cnt">
                        <option selected="selected">0</option>
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                    </select>명
                </div>

                <div class="age">
                    유아
                    <select name="baby_cnt">
                        <option selected="selected">0</option>
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                    </select>명
                </div>

                <input type="hidden" name="totalPrice" value="" />
                <span id="price">0</span>
            </div>
        </form>

        <a href="#" class="reserve_btn">예약하기</a>
    </article>
</section>

<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("button.rvWBtn").on("click", function () {
            $('form.rvWriter').slideToggle(500);
        });

        var dates = "@DateData";
        var minDate = new Date();

        function getDate() {
            var url = "/Products/getDays";

            var f = document.revForm,
                code = f.code.value,
                key = f.key.value;

            $.ajax({
                type: "POST",
                url: url,
                data: { code: code, key: key },
                success: function (data) {
                    dates = data;

                    var minDate = getFirstDate(dates);

                    $("#datepicker").datepicker("destroy");
                    $("#datepicker").datepicker({
                        dateFormat: 'yymmdd',
                        prevText: '이전',
                        nextText: '이후',
                        monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
                        monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
                        dayNames: ['일', '월', '화', '수', '목', '금', '토'],
                        dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],
                        dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
                        showMonthAfterYear: true,
                        yearSuffix: '년',
                        autoSize: true,
                        minDate: minDate,
                        defaultDate: minDate,
                        beforeShowDay: selectableDays,
                        onSelect: function (dateText, inst) {
                            getOptions(inst.selectedYear.toString() + '-' + zeroNum((inst.selectedMonth + 1).toString()) + '-' + zeroNum(inst.selectedDay.toString()));
                        }
                    });
                }
                , beforeSend: function () {
                    $('#loading').show();
                }
                , complete: function () {
                    $('#loading').hide();
                }
            });

            //$.post(url, { code: code, key: key }, function (data) {

            //    dates = data;

            //    var minDate = new Date();

            //    $("#datepicker").datepicker("destroy");
            //    $("#datepicker").datepicker({
            //        dateFormat: 'yymmdd',
            //        prevText: '이전',
            //        nextText: '이후',
            //        monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            //        monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            //        dayNames: ['일', '월', '화', '수', '목', '금', '토'],
            //        dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],
            //        dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
            //        showMonthAfterYear: true,
            //        yearSuffix: '년',
            //        autoSize: true,
            //        minDate: minDate,
            //        defaultDate: minDate,
            //        beforeShowDay: selectableDays,
            //        onSelect: function (dateText, inst) {
            //            getOptions(inst.selectedYear.toString() + '-' + zeroNum((inst.selectedMonth + 1).toString()) + '-' + zeroNum(inst.selectedDay.toString()));
            //        }
            //    });
            //});
        }

        function getFirstDate(date) {
            var nowDate = new Date();

            var date1 = "",
                abs = -1,
                returnDate;

            var days = 1;

            switch (nowDate.getDay()) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    days = 2;
                    break;
                case 5:
                    days = 4;
                    break;
                case 6:
                    days = 3;
                    break;
            }

            for (var i = 0; i < date.length; i++) {
                date1 = new Date(date[i].day.replace(/-/g, '/'));

                var str = (zeroNum(nowDate.getFullYear()) + "/" + zeroNum((nowDate.getMonth() + 1)) + "/" + zeroNum(nowDate.getDate()));

                var nowDate2 = new Date(str);


                if ("@empNo" != "4") {

                    nowDate2.setDate(nowDate2.getDate() + days);

                }

                returnDate = nowDate2;

                if ((nowDate2.getTime() - date1.getTime()) < 0) {
                    returnDate = date1;
                    break;
                }
            }

            return returnDate;
        }

        getDate();

        function getOptions(date) {
            var trfUrl = "/Products/getTrf";
            var optionsUrl = "/Products/getOptions";

            var f = document.revForm,
                code = f.code.value;

            var trfHtml = "";
            var prcHtml = "";

            $.ajax({
                type: "POST",
                url: trfUrl,
                data: { code: code, date: date },
                success: function (data) {

                    if (data.length < 2) {
                        for (var idx in data) {
                            trfHtml = "<input type='hidden' name='trfCD' value='" + data[idx].TRF_SEQ + "'/>";
                            trfHtml += "<p class='trfTxt' style='margin: 10px 5%;'> 교통 편 : " + data[idx].TRF_TITLE + " (출발 시간 : " + data[idx].TRF_STIME + " | 도착 시간 : " + data[idx].TRF_ETIME + ")</p>";

                        }
                    } else {
                        trfHtml = "<select name='trfCD' class='option'>" +
                            "<option selected='selected' value=''>----교통편 선택----</option>";

                        for (var idx in data) {
                            trfHtml += "<option value='" + data[idx].TRF_SEQ + "'>" + data[idx].TRF_TITLE + " (출발 시간 : " + data[idx].TRF_STIME + " | 도착 시간 : " + data[idx].TRF_ETIME + ")</option>";
                        }

                        trfHtml += "</select>";
                    }

                    if ($("p.trfTxt").length > 0) {
                        $("p.trfTxt").remove();
                    }

                    if ($("[name='trfCD']").length > 0) {
                        $("[name='trfCD']").remove();
                    }

                    $("div.optionsArea").prepend(trfHtml);
                }
                , beforeSend: function () {
                    $('#loading').show();
                }
                , complete: function () {
                    $('#loading').hide();
                }
            });

            //$.post(trfUrl, { code: code, date: date }, function (data) {

            //    if (data.length < 2)
            //    {
            //        for (var idx in data) {
            //            trfHtml = "<input type='hidden' name='trfCD' value='" + data[idx].TRF_SEQ + "'/>";
            //            trfHtml += "<p class='trfTxt' style='margin: 10px 5%;'> 교통 편 : " + data[idx].TRF_TITLE + " (출발 시간 : " + data[idx].TRF_STIME + " | 도착 시간 : " + data[idx].TRF_ETIME + ")</p>";

            //        }
            //    } else {
            //        trfHtml = "<select name='trfCD' class='option'>" +
            //                   "<option selected='selected' value=''>----교통편 선택----</option>";

            //        for (var idx in data) {
            //            trfHtml += "<option value='" + data[idx].TRF_SEQ + "'>" + data[idx].TRF_TITLE + " (출발 시간 : " + data[idx].TRF_STIME + " | 도착 시간 : " + data[idx].TRF_ETIME + ")</option>";
            //        }

            //        trfHtml += "</select>";
            //    }

            //    if ($("p.trfTxt").length > 0) {
            //        $("p.trfTxt").remove();
            //    }

            //    if ($("[name='trfCD']").length > 0) {
            //        $("[name='trfCD']").remove();
            //    }

            //    $("div.optionsArea").prepend(trfHtml);
            //});

            $.ajax({
                type: "POST",
                url: optionsUrl,
                data: { code: code, date: date },
                success: function (data) {
                    //console.log(data);
                    if (data.length < 2) {
                        for (var idx in data) {
                            prcHtml = "<input type='hidden' name='prcCD' value='" + data[idx].PRC_SEQ + "'/>";

                            prcHtml += "<p class='prcTxt' style='margin: 10px 5%;'> 옵션 : " + data[idx].PRC_EXP + " (요금 : " + transCurrency(data[idx].PRC_Currency_CODE) + " " + data[idx].PRC_Adult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ")</p>";

                            resetForm();

                            $("input[name=prcAdult]").val(data[idx].PRC_Adult);
                            $("input[name=prcChild]").val(data[idx].PRC_Child);
                            $("input[name=prcBaby]").val(data[idx].PRC_Baby);
                            $("input[name=prcCurrency]").val(data[idx].PRC_Currency_CODE);

                            setPersons();
                            setTotalPrice();
                        }
                    } else {
                        prcHtml = "<select name='prcCD' class='option'>" +
                            "<option selected='selected' value=''>----옵션 선택----</option>";

                        for (var idx in data) {
                            prcHtml += "<option value='" + data[idx].PRC_SEQ + "' data-adult='" + data[idx].PRC_Adult + "' data-child='" + data[idx].PRC_Child + "' data-baby='" + data[idx].PRC_Baby + "' data-currency='" + data[idx].PRC_Currency_CODE + "'>" + data[idx].PRC_EXP + " (요금 : " + transCurrency(data[idx].PRC_Currency_CODE) + " " + data[idx].PRC_Adult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ")</option>";
                        }

                        prcHtml += "</select>";

                        resetForm();
                    }

                    if ($("p.prcTxt").length > 0) {
                        $("p.prcTxt").remove();
                    }

                    if ($("[name='prcCD']").length > 0) {
                        $("[name='prcCD']").remove();
                    }

                    $("div.optionsArea").append(prcHtml);
                }
                , beforeSend: function () {
                    $('#loading').show();
                }
                , complete: function () {
                    $('#loading').hide();
                }
            });

            //$.post(optionsUrl, { code: code, date: date }, function (data) {
            //    if (data.length < 2) {
            //        for (var idx in data) {
            //            prcHtml = "<input type='hidden' name='prcCD' value='" + data[idx].PRC_SEQ + "'/>";

            //            prcHtml += "<p class='prcTxt' style='margin: 10px 5%;'> 옵션 : " + data[idx].PRC_EXP + " (요금 : " + transCurrency(data[idx].PRC_Currency_CODE) + " " + data[idx].PRC_Adult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ")</p>";

            //            resetForm();

            //            $("input[name=prcAdult]").val(data[idx].PRC_Adult);
            //            $("input[name=prcChild]").val(data[idx].PRC_Child);
            //            $("input[name=prcBaby]").val(data[idx].PRC_Baby);
            //            $("input[name=prcCurrency]").val(data[idx].PRC_Currency_CODE);

            //            setPersons();
            //            setTotalPrice();
            //        }
            //    } else {
            //        prcHtml = "<select name='prcCD' class='option'>" +
            //                   "<option selected='selected' value=''>----옵션 선택----</option>";

            //        for (var idx in data) {
            //            prcHtml += "<option value='" + data[idx].PRC_SEQ + "' data-adult='" + data[idx].PRC_Adult + "' data-child='" + data[idx].PRC_Child + "' data-baby='" + data[idx].PRC_Baby + "' data-currency='" + data[idx].PRC_Currency_CODE + "'>" + data[idx].PRC_EXP + " (요금 : " + transCurrency(data[idx].PRC_Currency_CODE) + " " + data[idx].PRC_Adult.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ")</option>";
            //        }

            //        prcHtml += "</select>";

            //        resetForm();
            //    }

            //    if ($("p.prcTxt").length > 0) {
            //        $("p.prcTxt").remove();
            //    }

            //    if ($("[name='prcCD']").length > 0) {
            //        $("[name='prcCD']").remove();
            //    }

            //    $("div.optionsArea").append(prcHtml);
            //});

            $("[name='date']").val(date);
        }

        function resetForm() {
            $("select[name='adult_cnt']").val(1);
            $("select[name='child_cnt']").val(0);
            $("select[name='baby_cnt']").val(0);

            $("input[name=prcAdult]").val(0);
            $("input[name=prcChild]").val(0);
            $("input[name=prcBaby]").val(0);

            $("input[name=totalPrice]").val(0);

            $("span#price").text(0);
        }

        function setTotalPrice() {
            var aCnt = $("select[name='adult_cnt']").val();
            var cCnt = $("select[name='child_cnt']").val();
            var bCnt = $("select[name='baby_cnt']").val();

            var aPrice = $("input[name=prcAdult]").val();
            var cPrice = $("input[name=prcChild]").val();
            var bPrice = $("input[name=prcBaby]").val();

            var currency = $("input[name=prcCurrency]").val();

            var totalPrice = (aCnt * 1) * (aPrice * 1);

            if (cPrice > 0) {
                totalPrice += (cCnt * 1) * (cPrice * 1);
            }

            if (bPrice > 0) {
                totalPrice += (bCnt * 1) * (bPrice * 1);
            }

            var bPrice = $("input[name=totalPrice]").val(totalPrice);
            $("span#price").text(transCurrency(currency) + " " + totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
        }

        function setPersons() {
            var cPrice = $("input[name=prcChild]").val();
            var bPrice = $("input[name=prcBaby]").val();

            if (cPrice < 1) {
                $("select[name='child_cnt']").parents("div.age").css("display", "none");
            }

            if (bPrice < 1) {
                $("select[name='baby_cnt']").parents("div.age").css("display", "none");
            }
        }

        function transCurrency(code) {
            var result = "";

            switch (code) {
                case "KRW":
                    result = "₩";
                    break;
                case "JPY":
                    result = "¥";
                    break;
                case "USD":
                    result = "$";
                    break;
            }

            return result;
        }

        function zeroNum(num) {
            var rNum = num;

            if (rNum.length < 2) {
                rNum = "0" + rNum
            }

            return rNum;
        }

        function selectableDays(date) {
            var dayOfMonth = date.getDate();

            var dummy = zeroNum(date.getFullYear().toString()) + "-" + zeroNum((date.getMonth() + 1).toString()) + "-" + zeroNum(date.getDate().toString());

            //var state = $.map(dates, function (obj) { return obj.state });
            var arrayDays = $.map(dates, function (obj) { return obj.day });

            var idx;

            if ($.inArray(dummy, arrayDays) > -1) {
                var className = "";

                idx = arrayDays.indexOf(dummy);

                //switch (state[idx]) {
                //    case "01":
                //        className += "bg_grn";
                //        break;
                //    case "02":
                //        className += "bg_gry";
                //        break;
                //    case "03":
                //        className += "bg_blu";
                //        break;
                //    case "04":
                //        className += "bg_red";
                //        break;
                //    default:
                //        className = "";
                //        break;
                //}

                return [true, className];
            }

            return [false, ""];
        }

        $("div.reserve").on("click", function () {
            var resSection = $("article.reserve_box");

            resSection.animate({
                top: "-=100%",
            }, 500, function () {
            });
        });

        $("div#reserve_head img").on("click", function () {
            var resSection = $("article.reserve_box");

            resSection.animate({
                top: "+=100%",
            }, 500, function () {
            });
        });

        $("div.age select").on("change", function () {
            setTotalPrice();
        });

        $("div.optionsArea").delegate("select.option", "change", function () {
            var _this = $(this),
                name = _this.attr("name");

            if (name == "prcCD") {
                var aPrice = _this.find("option:selected").attr("data-adult");
                var cPrice = _this.find("option:selected").attr("data-child");
                var bPrice = _this.find("option:selected").attr("data-baby");

                var currency = _this.find("option:selected").attr("data-currency");

                resetForm();

                $("input[name=prcAdult]").val(aPrice);
                $("input[name=prcChild]").val(cPrice);
                $("input[name=prcBaby]").val(bPrice);
                $("input[name=prcCurrency]").val(currency);

                setPersons();
                setTotalPrice();
            }
        });

        $("a.rvSave").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();

            var f = document.rvForm,
                pCode = f.pCode.value,
                pKey = f.pKey.value,
                cont = f.rvCont.value,
                star = f.rvStar.value;

            if (cont != "" && cont != undefined) {
                var url = "/Products/JSON_udtReview";
                var data = { pCode: pCode, pKey: pKey, cont: cont, star: star };

                if ("@user" == null) {
                    alert("로그인을 해야 후기작성이 완료됩니다.");
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    success: function (rData) {
                        location.reload();
                    }
                    , beforeSend: function () {
                        $('#loading').show();
                    }
                    , complete: function () {
                        $('#loading').hide();
                    }
                });
            }
        });

        $("a.reserve_btn").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();

            @*if ("@user.Login" != "ASPN15TRGT20167283")
                return;*@

            var url = window.location.pathname + window.location.search;
            url = encodeURIComponent(url);

            if ("@user" == "") {
                alert("로그인을 하셔야 예약이 진행됩니다.");
                location.href = "/Home/NDTLogin?r=" + url;
                return;
            }

            var f = document.revForm,
                trf = f.trfCD,
                prc = f.prcCD,
                date = f.date.value,
                aCnt = f.adult_cnt.value * 1,
                cCnt = f.child_cnt.value * 1,
                bCnt = f.baby_cnt.value * 1;

            if (aCnt + bCnt + cCnt > 10) {
                alert("버스 투어는 최대 10인 탑승입니다.");
                return;
            }

            if (date == "") {
                alert("날짜를 선택해 주세요.");
                return;
            }

            if (trf.value == undefined || trf.value == "") {
                alert("교통을 선택해주세요.");
                focus(trf);
                return;
            }

            if (prc.value == undefined || prc.value == "") {
                alert("옵션을 선택해주세요.");
                focus(prc);
                return;
            }

            f.method = "post";
            f.action = "/Products/reserve";
            f.submit();
        });
    });
</script>